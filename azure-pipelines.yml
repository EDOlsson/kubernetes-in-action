# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

# variables:
#   - group: key-vault-rotation-group
#   - name: keyVaultName
#     value: 'eo-test-keyvault'
#   - name: secretName
#     value: 'some-secret'

steps:
- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'Visual Studio Enterprise(1b81c0f2-5820-4f8e-a92a-d714b6957750)'
    KeyVaultName: 'eo-test-keyvault'
    SecretsFilter: 'some-secret'

# - pwsh: |
#     # $PSModuleAutoloadingPreference = 'All'

#     Find-Module -Name AzureRM.KeyVault | Install-Module -Force -AcceptLicense -Verbose

#     # Write-Host '>>>>>>>>>>>> AzureRM.KeyVault module installed.'

#     # Get-Command -Module AzureRM.KeyVault -Verbose
    
#     # Write-Host '>>>>>>>>>>>> About to import AzureRM.KeyVault module'

#     Import-Module AzureRM.KeyVault -Verbose

#     # Write-Host ">>>>>>>>>>>> About to write secret to KeyVault"

#     $secret = ConvertTo-SecureString -String "my-Awesome-password {(Get-Date).Second}" -AsPlainText -Force
#     AzureRM.KeyVault\Set-AzureKeyVaultSecret -VaultName 'eo-test-keyvault' -Name 'some-secret' -SecretValue $secret
#     Write-Host 'Done!'
#   displayName: 'Update Secret in Vault'
#   continueOnError: 'false'

- task: AzureCLI@1
  inputs:
    azureSubscription: 'Visual Studio Enterprise(1b81c0f2-5820-4f8e-a92a-d714b6957750)'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az keyvault secret set --vault-name 'eo-test-keyvault' --name 'some-secret' --value "my-Awesome-password $(date +%s)"

# - pwsh: |
#     # Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
#     Find-Module -Name AzureRM.KeyVault | Install-Module $_ -AcceptLicense
#     Import-Module -Name AzureRM.KeyVault
#     $secret = Get-AzureKeyVaultSecret -VaultName 'eo-test-keyvault' -Name 'some-secret'
#     Write-Host "The secret is {$secret.SecretValueText}."
#   displayName: 'Display Secret in Vault'

- task: AzureCLI@1
  inputs:
    azureSubscription: 'Visual Studio Enterprise(1b81c0f2-5820-4f8e-a92a-d714b6957750)'
    scriptLocation: 'inlineScript'
    arguments: vaultName, secretName
    inlineScript: |
      az keyvault secret show --vault-name $(vaultName) --name $(secretName)