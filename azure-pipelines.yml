# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'Visual Studio Enterprise(1b81c0f2-5820-4f8e-a92a-d714b6957750)'
    KeyVaultName: 'eo-test-keyvault'
    SecretsFilter: 'some-secret'

- pwsh: |
    Find-PackageProvider -Name 'Nuget' -AllVersions
    Install-PackageProvider -Name Nuget' -RequiredVersion 2.8.5.216 -Force -Verbose

    Write-Host 'DEBUG >> NuGet gotten.'

    Install-PackageProvider NuGet -Force -Scope CurrentUser

    Write-Host 'DEBUG >> NuGet installed'

    $m = Find-Module -Name AzureRM

    Write-Host "DEBUG >> AzureRM module found : $m"

    Install-Module $m -AcceptLicense

    Write-Host "DEBUG >> AzureRM module installed."
    
    Import-Module -Name AzureRM

    Write-Host "DEBUG >> AzureRM module imported."

    Write-Host "TRACE >> About to write secret to KeyVault"
    
    $secret = ConvertTo-SecureString -String "my-Awesome-password {(Get-Date).Second}" -AsPlainText -Force
    Set-AzureKeyVaultSecret -VaultName 'eo-test-keyvault' -Name 'some-secret' -SecretValue $secret
    Write-Host 'Done!'
  displayName: 'Update Secret in Vault'
  continueOnError: 'false'

- pwsh: |
    # Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
    Find-Module -Name AzureRM.KeyVault | Install-Module $_ -AcceptLicense
    Import-Module -Name AzureRM.KeyVault
    $secret = Get-AzureKeyVaultSecret -VaultName 'eo-test-keyvault' -Name 'some-secret'
    Write-Host "The secret is {$secret.SecretValueText}."
  displayName: 'Display Secret in Vault'